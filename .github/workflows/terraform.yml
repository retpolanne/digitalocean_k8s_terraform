env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
  DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
defaults:
  run:
    working-directory: terraform
on: push
permissions:
  pull-requests: write
jobs:
  tf-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Workspace
        id: workspace
        run: terraform workspace select k8s

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="digitalocean_token=$DO_ACCESS_TOKEN" -var="digitalocean_access_id=$AWS_ACCESS_KEY_ID" -var="digitalocean_secret_key=$AWS_SECRET_ACCESS_KEY" --var="zone_id=$CLOUDFLARE_ZONE_ID" --var="cloudflare_token=CLOUDFLARE_TOKEN"
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color -var="digitalocean_token=$DO_ACCESS_TOKEN" -var="digitalocean_access_id=$AWS_ACCESS_KEY_ID" -var="digitalocean_secret_key=$AWS_SECRET_ACCESS_KEY" --var="zone_id=$CLOUDFLARE_ZONE_ID" --var="cloudflare_token=CLOUDFLARE_TOKEN"
        continue-on-error: true
